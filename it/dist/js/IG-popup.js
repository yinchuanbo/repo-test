let loadingIcon='\n  <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="16" height="16" viewBox="0 0 16 16">\n    <defs>\n      <clipPath id="clip-path">\n        <rect id="Rectangle_31790" data-name="Rectangle 31790" width="16" height="16" fill="#fff" stroke="#707070" stroke-width="1"/>\n      </clipPath>\n      <linearGradient id="linear-gradient" x1="0.5" y1="0.053" x2="0.5" y2="0.918" gradientUnits="objectBoundingBox">\n        <stop offset="0" stop-color="#fff"/>\n        <stop offset="1" stop-color="#fff" stop-opacity="0.549"/>\n      </linearGradient>\n      <linearGradient id="linear-gradient-2" x1="0.5" y1="0.152" x2="0.5" y2="0.872" gradientUnits="objectBoundingBox">\n        <stop offset="0" stop-color="#fff" stop-opacity="0"/>\n        <stop offset="1" stop-color="#fff" stop-opacity="0.549"/>\n      </linearGradient>\n    </defs>\n    <g id="icon_loading" opacity="0.7" clip-path="url(#clip-path)">\n      <path id="_2" data-name="2" d="M6.124.015a1.05,1.05,0,0,1,.348,2.071A5.251,5.251,0,0,0,7.35,12.513v2.1A7.35,7.35,0,0,1,6.124.015Z" transform="translate(0.65 0.694)" fill="url(#linear-gradient)"/>\n      <path id="_1" data-name="1" d="M13.925,2.524a1.05,1.05,0,0,1,1.483-.08A7.35,7.35,0,0,1,10.5,15.265v-2.1A5.25,5.25,0,0,0,14,4.006,1.05,1.05,0,0,1,13.925,2.524Z" transform="translate(-2.5 0.041)" fill="url(#linear-gradient-2)"/>\n    </g>\n  </svg>\n';!function(t){window.$Popup=function(o){let n=!1;const e=t.extend({title:"Modal",type:"normal",limits:1,content:"",errorType:"",otherBtns:"",closeBtn:jsonData.IGpopup.ok,applyBtn:"",autoClose:!0,closeOnBackdropClick:!0,onClose:function(){},onApply:function(){},topCloseFn:function(){}},o),i={normal:jsonData.IGpopup.errorDesc,network:jsonData.IGpopup.errorNetwork,limit:jsonData.IGpopup.limitDes.replace("%s",e.limits),task:jsonData.IGpopup.errorTask};"error"===e.type?(e.title=jsonData.IGpopup.errorTitle,"network"===e.errorType&&(e.title=jsonData.IGpopup.errorNetworkTitle)):"limit"===e.type&&(e.title=jsonData.IGpopup.limit);const l=`\n      <div class="popup-title">\n        ${"network"===e.errorType?`<div class="title-left">\n              <div>${e.title}</div>\n            </div>`:"error"===e.type?`<div class="title-left">\n              <img src="/dist/img/IGcommon/error_icon.svg" alt="error icon"/>\n              <div>${e.title}</div>\n            </div>`:`<div class="title-left">\n             ${e.title}\n           </div>`}${"network"===e.errorType?"":'\n      <div class="title-right">\n        <img src="/dist/img/IGcommon/popup_x_icon.svg" alt="close button"/>\n      </div>'}\n      </div>`,a=`\n      <div class="popup-content">${e.content||i[e.errorType]||""}</div>`,s=`\n      <div class="bottom-btns-box">\n        <button class="closeModal">${e.closeBtn}</button>\n        <button class="closeModal2" style="display:${e.applyBtn?"block":"none"}">${e.applyBtn}</button>\n        ${e.otherBtns}\n      </div>`,r=t(`<div class="modal modal-wrapper ${e.type}"></div>`),c=t('<div class="modal-container"></div>');c.html(`${l}${a}${s}`),r.html(c);const p=r.find(".closeModal"),d=r.find(".closeModal2"),f=r.find(".title-right"),m=()=>{n||(p.on("click",(function(){e.onClose(),e.autoClose&&u()})),d.on("click",(function(){e.onApply()})),f.on("click",(function(){e.topCloseFn(),u()})),e.closeOnBackdropClick&&r.on("click",(function(o){t(o.target).closest(".modal-container").length||u()})),n=!0),r.appendTo("body").show()},u=()=>{p.off("click"),d.off("click"),f.off("click"),r.off("click"),n=!1,r.remove()};return m(),{modal:r,show:function(){m()},close:function(){u()},closeAll:function(){(t=>{const o=t.hasClass("modal-wrapper")?t:t.closest(".modal-wrapper");(t=>{const o=t.find(".title-right");t.find(".closeModal").off("click"),t.find(".closeModal2").off("click"),o.off("click"),t.off("click")})(o),o.remove()})(t(".modal-wrapper"))},closeButton:{disable(){p.css({"pointer-events":"none"})},enable(){p.removeAttr("style")}},loading:{start(){p.empty().append(loadingIcon),p.css({"pointer-events":"none"}),p.find("svg").css("animation","rotation 1s infinite linear")},end(){p.empty().append(e.closeBtn),p.css({"pointer-events":"auto"})}}}}}(jQuery);